{"name":"React-bootstrap-table","tagline":"It' a react table for bootstrap","body":"## **React-bootstrap-table.**\r\nIt's a react table for bootstrap, named reactBsTable.   \r\nAs you know, the basic bootstrap table function like striped, bordered, hover and condensed are supported in reactBsTable. In addition, reactBsTable support data align, sorting, cell format and scrolling.   \r\n\r\n## **Usage**\r\n### Download reactBsTable first.\r\n```\r\nnpm install react-bootstrap-table --save\r\n```\r\n### Use reactBsTable in your react app by two ways\r\n* Import reactBsTable in module(CommonJS/AMD)\r\n```\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';  // in ECMAScript 6\r\n// or\r\nvar ReactBSTable = require(\"react-bootstrap-table\");  \r\nvar BootstrapTable = ReactBSTable.BootstrapTable;\r\nvar TableHeaderColumn = ReactBSTable.TableHeaderColumn;\r\n```\r\n* browser(window object)\r\n```\r\n<script src=\"path/to/react-bootstrap-table/react-bootstrap-table.min.js\" />\r\n```\r\nthe react-bootstrap-dropdown.min.js file you can find in the dist folder\r\n\r\n### Add CSS file to your HTML\r\n```\r\n<link rel=\"stylesheet\" href=\"./css/react-bootstrap-table.min.css\">\r\n```\r\nthe react-bootstrap-table.min.css file you can find in the css folder\r\n\r\n### Create a reactBsTable in your app\r\n```\r\n// products will be presented by reactBsTable \r\nvar products = [\r\n  {\r\n      id: 1,\r\n      name: \"Item name 1\",\r\n      price: 100\r\n  },{\r\n      id: 2,\r\n      name: \"Item name 2\",\r\n      price: 100\r\n  },{\r\n      id: 3,\r\n      name: \"Item name 3\",\r\n      price: 110\r\n  },{\r\n      id: 4,\r\n      name: \"Item name 4\",\r\n      price: 100\r\n  },{\r\n      id: 5,\r\n      name: \"Item name 5\",\r\n      price: 100\r\n  },{\r\n      id: 6,\r\n      name: \"Item name 6\",\r\n      price: 100\r\n  }\r\n];\r\n// It's a data format example.\r\nfunction priceFormatter(cell, row){\r\n  return '<i class=\"glyphicon glyphicon-usd\"></i> ' + cell;\r\n}\r\n\r\nReact.render(\r\n  <BootstrapTable data={products} height=\"120\" striped=\"true\" hover=\"true\">\r\n      <TableHeaderColumn dataField=\"id\" dataAlign=\"center\" dataSort=\"true\">Product ID</TableHeaderColumn>\r\n      <TableHeaderColumn dataField=\"name\" dataSort=\"true\">Product Name</TableHeaderColumn>\r\n      <TableHeaderColumn dataField=\"price\" dataFormat={priceFormatter}>Product Price</TableHeaderColumn>\r\n  </BootstrapTable>,\r\n\tdocument.getElementById(\"basic\")\r\n);\r\n```\r\n\r\n## **API & Attributes**\r\n### The attributes in BootstrapTable:\r\nUse ```data``` to specify the data that you want to display on table.   \r\nUse ```height``` to set the table height, default is 100%.   \r\nUse ```striped``` to set table be a striped columns. Like bootstrap table class ```.table-striped```.   \r\nUse ```hover``` to enable table hover. Like bootstrap table class ```.table-hover```.   \r\nUse ```condensed``` to set a condensed table. Like bootstrap table class ```.table-condensed```.   \r\n\r\n### The attributes in TableHeaderColumn:   \r\nUse ```dataField``` to specidy which column you want to show on this column.   \r\nUse ```dataAlign``` to set align in column. Available value is left, center, right, start and end.   \r\nUse ```dataSort``` to enable the sorting in column. Default value is false(disabled).   \r\nUse ```dataFormat``` to customize this column.Must give it as a function. \r\n\r\n## **Authors**\r\nAllenFang (@AllenFang).   \r\nAllen is a research and development engineer on Hadoop/HBase in Taiwan.   \r\nIn addition, he has a lot of experiences in J2EE and Web development.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}